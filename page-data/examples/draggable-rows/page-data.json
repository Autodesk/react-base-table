{"componentChunkName":"component---src-templates-example-js","path":"/examples/draggable-rows","webpackCompilationHash":"60891c1d7b14f843b520","result":{"data":{"rawCode":{"content":"// import { sortableContainer, sortableElement, sortableHandle } from 'react-sortable-hoc'\nconst { sortableContainer, sortableElement, sortableHandle } = ReactSortableHoc\nconst DraggableContainer = sortableContainer(({ children }) => children)\nconst DraggableElement = sortableElement(({ children }) => children)\nconst DraggableHandle = sortableHandle(({ children }) => children)\n\nconst Handle = styled.div`\n  flex: none;\n  width: 7.5px;\n  height: 100%;\n\n  &::before {\n    content: '';\n    border-left: 4px dotted #ccc;\n    display: block;\n    height: 20px;\n    margin: 15px 3px;\n  }\n\n  &:hover::before {\n    border-color: #888;\n  }\n`\n\nconst Row = ({ key, index, children, ...rest }) => (\n  <DraggableElement key={key} index={index}>\n    <div {...rest}>\n      <DraggableHandle>\n        <Handle />\n      </DraggableHandle>\n      {children}\n    </div>\n  </DraggableElement>\n)\n\nconst rowProps = ({ rowIndex }) => ({\n  tagName: Row,\n  index: rowIndex,\n})\n\nclass DraggableTable extends React.PureComponent {\n  state = {\n    data: this.props.data,\n  }\n\n  table = React.createRef()\n\n  getContainer = () => {\n    return this.table.current.getDOMNode().querySelector('.BaseTable__body')\n  }\n\n  getHelperContainer = () => {\n    return this.table.current.getDOMNode().querySelector('.BaseTable__table')\n  }\n\n  rowProps = args => {\n    // don't forget to passing the incoming rowProps\n    const extraProps = callOrReturn(this.props.rowProps)\n    return {\n      ...extraProps,\n      tagName: Row,\n      index: args.rowIndex,\n    }\n  }\n\n  handleSortEnd = ({ oldIndex, newIndex }) => {\n    const data = [...this.state.data]\n    const [removed] = data.splice(oldIndex, 1)\n    data.splice(newIndex, 0, removed)\n    this.setState({ data })\n  }\n\n  render() {\n    return (\n      <DraggableContainer\n        useDragHandle\n        getContainer={this.getContainer}\n        helperContainer={this.getHelperContainer}\n        onSortEnd={this.handleSortEnd}\n      >\n        <Table\n          {...this.props}\n          ref={this.table}\n          data={this.state.data}\n          fixed={false}\n          rowProps={this.rowProps}\n        />\n      </DraggableContainer>\n    )\n  }\n}\n\nconst Hint = styled.div`\n  font-size: 16px;\n  font-weight: 700;\n  color: #336699;\n  margin-bottom: 10px;\n`\n\nconst columns = generateColumns(10)\nconst data = generateData(columns, 200)\ncolumns[0].minWidth = 150\n\nexport default () => (\n  <>\n    <Hint>Drag the dots, only works in flex mode(fixed=false)</Hint>\n    <DraggableTable columns={columns} data={data} />\n  </>\n)\n"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"name":"draggable-rows"}}}