{"componentChunkName":"component---src-templates-example-js","path":"/examples/row-span","webpackCompilationHash":"60891c1d7b14f843b520","result":{"data":{"rawCode":{"content":"const columns = generateColumns(10, undefined, { resizable: true })\nconst data = generateData(columns, 200)\n\nconst colSpanIndex = 1\ncolumns[colSpanIndex].colSpan = ({ rowData, rowIndex }) => (rowIndex % 4) + 1\ncolumns[colSpanIndex].align = Column.Alignment.CENTER\n\nconst rowSpanIndex = 0\ncolumns[rowSpanIndex].rowSpan = ({ rowData, rowIndex }) =>\n  rowIndex % 2 === 0 && rowIndex <= data.length - 2 ? 2 : 1\n\nconst rowRenderer = ({ rowData, rowIndex, cells, columns }) => {\n  const colSpan = columns[colSpanIndex].colSpan({ rowData, rowIndex })\n  if (colSpan > 1) {\n    let width = cells[colSpanIndex].props.style.width\n    for (let i = 1; i < colSpan; i++) {\n      width += cells[colSpanIndex + i].props.style.width\n      cells[colSpanIndex + i] = null\n    }\n    const style = {\n      ...cells[colSpanIndex].props.style,\n      width,\n      backgroundColor: 'lightgray',\n    }\n    cells[colSpanIndex] = React.cloneElement(cells[colSpanIndex], { style })\n  }\n\n  const rowSpan = columns[rowSpanIndex].rowSpan({ rowData, rowIndex })\n  if (rowSpan > 1) {\n    const cell = cells[rowSpanIndex]\n    const style = {\n      ...cell.props.style,\n      backgroundColor: 'darkgray',\n      height: rowSpan * 50 - 1,\n      alignSelf: 'flex-start',\n      zIndex: 1,\n    }\n    cells[rowSpanIndex] = React.cloneElement(cell, { style })\n  }\n  return cells\n}\n\nexport default () => (\n  <Table\n    fixed\n    columns={columns}\n    data={data}\n    rowRenderer={rowRenderer}\n    overscanRowCount={2}\n  />\n)\n"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"name":"row-span"}}}