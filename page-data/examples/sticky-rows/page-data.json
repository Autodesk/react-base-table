{"componentChunkName":"component---src-templates-example-js","path":"/examples/sticky-rows","webpackCompilationHash":"60891c1d7b14f843b520","result":{"data":{"rawCode":{"content":"const columns = generateColumns(10)\nconst data = generateData(columns, 200)\n\nconst fixedColumns = columns.map((column, columnIndex) => {\n  let frozen\n  if (columnIndex < 2) frozen = Column.FrozenDirection.LEFT\n  if (columnIndex > 8) frozen = Column.FrozenDirection.RIGHT\n  return { ...column, frozen }\n})\n\nconst GlobalStyle = createGlobalStyle`\n  .sticky-row.BaseTable__row {\n    background-color: #f3f3f3;\n  }\n`\n\nexport default () => {\n  const [stickyIndex, setStickyIndex] = React.useState(0)\n  const tableData = data.slice(1)\n  const frozenData = data.slice(stickyIndex, stickyIndex + 1)\n\n  const rowClassName = React.useCallback(({ rowIndex }) => {\n    // we sliced the original data by 1, so we have to correct the index back\n    if (rowIndex < 0 || (rowIndex + 1) % 5 === 0) return 'sticky-row'\n  })\n  const handleScroll = React.useCallback(({ scrollTop }) => {\n    setStickyIndex(Math.floor(scrollTop / 250) * 5)\n  })\n  return (\n    <>\n      <GlobalStyle />\n      <Table\n        fixed\n        columns={fixedColumns}\n        data={tableData}\n        frozenData={frozenData}\n        rowClassName={rowClassName}\n        onScroll={handleScroll}\n      />\n    </>\n  )\n}\n"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"name":"sticky-rows"}}}